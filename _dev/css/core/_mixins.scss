//----------------------------------------------
// Breakpoints
// Sets a media query based on our screen varibles within variables/_other.scss
//----------------------------------------------

@mixin switch {

	@media all and (min-width: #{$switch}) {

		@content;
	}
}

@mixin xxs {

	@media all and (min-width: #{$xxs}) {

		@content;
	}
}

@mixin xs {

	@media all and (min-width: #{$xs}) {

		@content;
	}
}

@mixin sm {

	@media all and (min-width: #{$sm}) {

		@content;
	}
}

@mixin md {

	@media all and (min-width: #{$md}) {

		@content;
	}
}

@mixin lg {

	@media all and (min-width: #{$lg}) {

		@content;
	}
}

@mixin xl {

	@media all and (min-width: #{$xl}) {

		@content;
	}
}

@mixin xxl {

	@media all and (min-width: #{$xxl}) {

		@content;
	}
}

@mixin xxxl {

	@media all and (min-width: #{$xxxl}) {

		@content;
	}
}

@mixin container($maxwidth) {
	position: relative;
	margin: 0 auto;
	max-width: $maxwidth;
	width: auto;
}

/*==============================================================================
	ROWS & COLUMNS - FLEX
	make any element a flex row or column
==============================================================================*/

@mixin column($justify) {
	display: flex;
	flex-direction: column;
	justify-content: $justify;
	margin: 0;
}

@mixin row($justify) {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: $justify;
}


//----------------------------------------------
//  Alignments
//----------------------------------------------

@mixin align-center {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

@mixin align-horizontal {
	position: absolute;
	left: 50%;
	transform: translateX(-50%);
}

@mixin align-vertical {
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
}

//----------------------------------------------
//  Fluid Property Mixin
//  Sets a calculation based on the given pixel input, can be used for any
//  css element that takes a numberic input (padding,margin,width etc.).
//  This mixin then calculates the value needed between 320px and 1920x, unless
//  given an start and and end point.
//  Usage:
//  @include fp(padding,20,30);
//----------------------------------------------

@mixin fp($property, $min, $max, $start: 320, $end: 1920, $clip: true, $clipAtStart: true, $clipAtEnd: true) {
	$multiplier: ($max - $min) / ($end - $start) * 100;
	$adder: ($min * $end - $max * $start) / ($end - $start);
	$formula: calc(#{$multiplier + 0vw} + #{$adder + 0px});

	@if $clip and $clipAtStart {

		@media (max-width: #{$start + 0px}) {
			#{$property}: $min + 0;
		}
	}

	@if $clip and $clipAtEnd {

		@media (min-width: #{$end + 0px}) {
			#{$property}: $max + 0;
		}
	}
	#{$property}: $formula;
}


//----------------------------------------------
//  IMAGES - FULL-WIDTH ON MOBILE
//----------------------------------------------

@mixin full-width-image {

	@include bp($s) {
		width: 100%;
		max-width: 100%;
		margin-left: 0;
		margin-right: 0;
		float: none;
	}
}

//----------------------------------------------
//  PRINT - HIDE
//----------------------------------------------

@mixin hide-on-print {

	@media print {
		display: none;
	}
}

//----------------------------------------------
//  PRINT - FULL-WIDTH
//----------------------------------------------

@mixin full-width-print {

	@media print {
		width: 100%;
	}
}

//----------------------------------------------
// PLACEHOLDER TEXT
//----------------------------------------------

@mixin placeholder() {

	&::-webkit-input-placeholder {

		@content;
	}

	&::-moz-placeholder {

		@content;
	}

	&:-moz-placeholder {

		@content;
	}

	&:-ms-input-placeholder {

		@content;
	}

	&::placeholder {

		@content;
	}
}

//----------------------------------------------
// ICONS - FONT AWESOME
//----------------------------------------------

@mixin icon($icon) {
	display: none;
	font-family: "Font Awesome 5 Regular";
	content: $icon;
}

@mixin icon-l($icon) {
	display: none;
	font-family: "Font Awesome 5 Light";
	content: $icon;
}

@mixin icon-s($icon) {
	display: none;
	font-family: "Font Awesome 5 Solid";
	content: $icon;
}

@mixin logo($icon) {
	display: none;
	font-family: "Font Awesome 5 Brands";
	content: $icon;
}

//----------------------------------------------
// FONT-SMOOTHING
//----------------------------------------------

@mixin font-smoothing($value: on) {

	@if $value == on {
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	} @else {
		-webkit-font-smoothing: subpixel-antialiased;
		-moz-osx-font-smoothing: auto;
	}
}


@mixin overlay($color, $percentage) {

	&:after {
		background-color: rgba($color, $percentage);
		bottom: 0;
		content: "";
		left: 0;
		opacity: 1;
		position: absolute;
		right: 0;
		top: 0;
		transition: $ease;
		z-index: 0;
	}
}

@mixin overlay-hover($color, $percentage) {

	&:after {
		background-color: rgba($color, $percentage);
		bottom: 0;
		content: "";
		left: 0;
		opacity: 0;
		position: absolute;
		right: 0;
		top: 0;
		transition: $ease;
		z-index: 0;
	}

	&:hover,
	&:focus {

		&:after {
			opacity: 1;
		}
	}
}
